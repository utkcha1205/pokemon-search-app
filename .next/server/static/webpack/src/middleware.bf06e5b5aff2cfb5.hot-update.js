"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src/middleware",{

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n/* harmony import */ var _middlewares_apis_authMiddleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../middlewares/apis/authMiddleware */ \"(middleware)/./middlewares/apis/authMiddleware.ts\");\n/* harmony import */ var _middlewares_apis_loggingMiddleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../middlewares/apis/loggingMiddleware */ \"(middleware)/./middlewares/apis/loggingMiddleware.ts\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/headers */ \"(middleware)/./node_modules/next/dist/esm/api/headers.js\");\n// import { NextRequest, NextResponse } from \"next/server\";\n// import { authMiddleware } from \"../middlewares/apis/authMiddleware\";\n// import { loggingMiddleware } from \"../middlewares/apis/loggingMiddleware\";\n// import {getServerSession} from 'next-auth'\n// export const config = {\n//     matcher: \"/api/:path*\"\n// }\n// const protectedRoutes = [\"/middlewareComp\"]\n// export async function  middleware(request:NextRequest){\n//     const session = await getServerSession()\n//     if(!session && protectedRoutes.includes(request.nextUrl.pathname)){\n//         const abosulteUrl = new URL('/', request.nextUrl.origin)\n//         return NextResponse.redirect(abosulteUrl.toString())\n//     }\n//     // if(request.url.includes(\"/api/notes\")){\n//     //     const logResult = loggingMiddleware(request)\n//     //     console.log(\"logResult\",logResult.response)\n//     // }\n//     // const authResult = authMiddleware(request)\n//     // if(!authResult?.isValid){\n//     //     return new NextResponse(JSON.stringify({message: 'unauthorized'}), {status: 401})\n//     // }\n//     const requestHeaders = new Headers(request.headers);\n//   const response = NextResponse.next({\n//     request: {\n//       headers: requestHeaders,\n//     },\n//   });\n//   return response;\n// }\n\n\n\n\nconst config = {\n    matcher: [\n        \"/api\",\n        \"/middlewareComp\"\n    ]\n};\nconst protectedRoutes = [\n    \"/middlewareComp\"\n];\nasync function middleware(request) {\n    let token = (0,next_headers__WEBPACK_IMPORTED_MODULE_3__.cookies)()?.get(\"midToken\");\n    console.log(token, \"tokennnnnnnn\");\n    // Fetch the session once and await it if it is an async operation\n    //   const session = await getServerSession();\n    //   console.log(session,\"seeeeeee\")\n    // Check if the session is missing and the route is protected\n    if (protectedRoutes.includes(request.nextUrl.pathname)) {\n        const absoluteUrl = new URL(\"/\", request.nextUrl.origin);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(absoluteUrl.toString());\n    }\n    // Perform logging if the request URL includes \"/api/notes\"\n    if (request.url.includes(\"/api/notes\")) {\n        const logResult = (0,_middlewares_apis_loggingMiddleware__WEBPACK_IMPORTED_MODULE_2__.loggingMiddleware)(request);\n        console.log(\"logResult\", logResult.response);\n    }\n    // Check authentication validity using authMiddleware\n    const authResult = (0,_middlewares_apis_authMiddleware__WEBPACK_IMPORTED_MODULE_1__.authMiddleware)(request);\n    if (!authResult?.isValid) {\n        // Return a response immediately if the user is not authorized\n        return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(JSON.stringify({\n            message: \"unauthorized\"\n        }), {\n            status: 401\n        });\n    }\n    // If no early return has occurred, proceed with the request\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsMkRBQTJEO0FBQzNELHVFQUF1RTtBQUN2RSw2RUFBNkU7QUFDN0UsNkNBQTZDO0FBRTdDLDBCQUEwQjtBQUMxQiw2QkFBNkI7QUFDN0IsSUFBSTtBQUVKLDhDQUE4QztBQUU5QywwREFBMEQ7QUFDMUQsK0NBQStDO0FBRS9DLDBFQUEwRTtBQUMxRSxtRUFBbUU7QUFDbkUsK0RBQStEO0FBQy9ELFFBQVE7QUFDUixpREFBaUQ7QUFDakQsMERBQTBEO0FBQzFELHlEQUF5RDtBQUN6RCxXQUFXO0FBQ1gsb0RBQW9EO0FBRXBELG1DQUFtQztBQUNuQywrRkFBK0Y7QUFDL0YsV0FBVztBQUNYLDJEQUEyRDtBQUMzRCx5Q0FBeUM7QUFDekMsaUJBQWlCO0FBQ2pCLGlDQUFpQztBQUNqQyxTQUFTO0FBQ1QsUUFBUTtBQUNSLHFCQUFxQjtBQUNyQixJQUFJO0FBR29EO0FBQ1k7QUFDTTtBQUVuQztBQUVoQyxNQUFNSSxTQUFTO0lBQ3BCQyxTQUFTO1FBQUM7UUFBUTtLQUFrQjtBQUN0QyxFQUFFO0FBRUYsTUFBTUMsa0JBQWtCO0lBQUM7Q0FBa0I7QUFFcEMsZUFBZUMsV0FBV0MsT0FBb0I7SUFDakQsSUFBSUMsUUFBYU4scURBQU9BLElBQUlPLElBQUk7SUFFaENDLFFBQVFDLEdBQUcsQ0FBQ0gsT0FBTTtJQUNwQixrRUFBa0U7SUFDcEUsOENBQThDO0lBQzlDLG9DQUFvQztJQUNsQyw2REFBNkQ7SUFDN0QsSUFBS0gsZ0JBQWdCTyxRQUFRLENBQUNMLFFBQVFNLE9BQU8sQ0FBQ0MsUUFBUSxHQUFHO1FBQ3ZELE1BQU1DLGNBQWMsSUFBSUMsSUFBSSxLQUFLVCxRQUFRTSxPQUFPLENBQUNJLE1BQU07UUFDdkQsT0FBT2xCLHFEQUFZQSxDQUFDbUIsUUFBUSxDQUFDSCxZQUFZSSxRQUFRO0lBQ25EO0lBRUEsMkRBQTJEO0lBQzNELElBQUlaLFFBQVFhLEdBQUcsQ0FBQ1IsUUFBUSxDQUFDLGVBQWU7UUFDdEMsTUFBTVMsWUFBWXBCLHNGQUFpQkEsQ0FBQ007UUFDcENHLFFBQVFDLEdBQUcsQ0FBQyxhQUFhVSxVQUFVQyxRQUFRO0lBQzdDO0lBRUEscURBQXFEO0lBQ3JELE1BQU1DLGFBQWF2QixnRkFBY0EsQ0FBQ087SUFFbEMsSUFBSSxDQUFDZ0IsWUFBWUMsU0FBUztRQUN4Qiw4REFBOEQ7UUFDOUQsT0FBTyxJQUFJekIscURBQVlBLENBQUMwQixLQUFLQyxTQUFTLENBQUM7WUFBRUMsU0FBUztRQUFlLElBQUk7WUFDbkVDLFFBQVE7UUFDVjtJQUNGO0lBRUEsNERBQTREO0lBQzVELE9BQU83QixxREFBWUEsQ0FBQzhCLElBQUk7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL21pZGRsZXdhcmUudHM/ZDE5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSBcIm5leHQvc2VydmVyXCI7XG4vLyBpbXBvcnQgeyBhdXRoTWlkZGxld2FyZSB9IGZyb20gXCIuLi9taWRkbGV3YXJlcy9hcGlzL2F1dGhNaWRkbGV3YXJlXCI7XG4vLyBpbXBvcnQgeyBsb2dnaW5nTWlkZGxld2FyZSB9IGZyb20gXCIuLi9taWRkbGV3YXJlcy9hcGlzL2xvZ2dpbmdNaWRkbGV3YXJlXCI7XG4vLyBpbXBvcnQge2dldFNlcnZlclNlc3Npb259IGZyb20gJ25leHQtYXV0aCdcblxuLy8gZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcbi8vICAgICBtYXRjaGVyOiBcIi9hcGkvOnBhdGgqXCJcbi8vIH1cblxuLy8gY29uc3QgcHJvdGVjdGVkUm91dGVzID0gW1wiL21pZGRsZXdhcmVDb21wXCJdXG5cbi8vIGV4cG9ydCBhc3luYyBmdW5jdGlvbiAgbWlkZGxld2FyZShyZXF1ZXN0Ok5leHRSZXF1ZXN0KXtcbi8vICAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgZ2V0U2VydmVyU2Vzc2lvbigpXG5cbi8vICAgICBpZighc2Vzc2lvbiAmJiBwcm90ZWN0ZWRSb3V0ZXMuaW5jbHVkZXMocmVxdWVzdC5uZXh0VXJsLnBhdGhuYW1lKSl7XG4vLyAgICAgICAgIGNvbnN0IGFib3N1bHRlVXJsID0gbmV3IFVSTCgnLycsIHJlcXVlc3QubmV4dFVybC5vcmlnaW4pXG4vLyAgICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QoYWJvc3VsdGVVcmwudG9TdHJpbmcoKSlcbi8vICAgICB9XG4vLyAgICAgLy8gaWYocmVxdWVzdC51cmwuaW5jbHVkZXMoXCIvYXBpL25vdGVzXCIpKXtcbi8vICAgICAvLyAgICAgY29uc3QgbG9nUmVzdWx0ID0gbG9nZ2luZ01pZGRsZXdhcmUocmVxdWVzdClcbi8vICAgICAvLyAgICAgY29uc29sZS5sb2coXCJsb2dSZXN1bHRcIixsb2dSZXN1bHQucmVzcG9uc2UpXG4vLyAgICAgLy8gfVxuLy8gICAgIC8vIGNvbnN0IGF1dGhSZXN1bHQgPSBhdXRoTWlkZGxld2FyZShyZXF1ZXN0KVxuXG4vLyAgICAgLy8gaWYoIWF1dGhSZXN1bHQ/LmlzVmFsaWQpe1xuLy8gICAgIC8vICAgICByZXR1cm4gbmV3IE5leHRSZXNwb25zZShKU09OLnN0cmluZ2lmeSh7bWVzc2FnZTogJ3VuYXV0aG9yaXplZCd9KSwge3N0YXR1czogNDAxfSlcbi8vICAgICAvLyB9XG4vLyAgICAgY29uc3QgcmVxdWVzdEhlYWRlcnMgPSBuZXcgSGVhZGVycyhyZXF1ZXN0LmhlYWRlcnMpO1xuLy8gICBjb25zdCByZXNwb25zZSA9IE5leHRSZXNwb25zZS5uZXh0KHtcbi8vICAgICByZXF1ZXN0OiB7XG4vLyAgICAgICBoZWFkZXJzOiByZXF1ZXN0SGVhZGVycyxcbi8vICAgICB9LFxuLy8gICB9KTtcbi8vICAgcmV0dXJuIHJlc3BvbnNlO1xuLy8gfVxuXG5cbmltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcbmltcG9ydCB7IGF1dGhNaWRkbGV3YXJlIH0gZnJvbSBcIi4uL21pZGRsZXdhcmVzL2FwaXMvYXV0aE1pZGRsZXdhcmVcIjtcbmltcG9ydCB7IGxvZ2dpbmdNaWRkbGV3YXJlIH0gZnJvbSBcIi4uL21pZGRsZXdhcmVzL2FwaXMvbG9nZ2luZ01pZGRsZXdhcmVcIjtcbmltcG9ydCB7IGdldFNlcnZlclNlc3Npb24gfSBmcm9tICduZXh0LWF1dGgnOyBcbmltcG9ydCB7IGNvb2tpZXMgfSBmcm9tIFwibmV4dC9oZWFkZXJzXCI7XG5cbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XG4gIG1hdGNoZXI6IFtcIi9hcGlcIiwgXCIvbWlkZGxld2FyZUNvbXBcIl0sXG59O1xuXG5jb25zdCBwcm90ZWN0ZWRSb3V0ZXMgPSBbXCIvbWlkZGxld2FyZUNvbXBcIl07XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtaWRkbGV3YXJlKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gICAgbGV0IHRva2VuOmFueSA9ICBjb29raWVzKCk/LmdldCgnbWlkVG9rZW4nKTtcblxuICAgIGNvbnNvbGUubG9nKHRva2VuLFwidG9rZW5ubm5ubm5uXCIpXG4gIC8vIEZldGNoIHRoZSBzZXNzaW9uIG9uY2UgYW5kIGF3YWl0IGl0IGlmIGl0IGlzIGFuIGFzeW5jIG9wZXJhdGlvblxuLy8gICBjb25zdCBzZXNzaW9uID0gYXdhaXQgZ2V0U2VydmVyU2Vzc2lvbigpO1xuLy8gICBjb25zb2xlLmxvZyhzZXNzaW9uLFwic2VlZWVlZWVcIilcbiAgLy8gQ2hlY2sgaWYgdGhlIHNlc3Npb24gaXMgbWlzc2luZyBhbmQgdGhlIHJvdXRlIGlzIHByb3RlY3RlZFxuICBpZiAoIHByb3RlY3RlZFJvdXRlcy5pbmNsdWRlcyhyZXF1ZXN0Lm5leHRVcmwucGF0aG5hbWUpKSB7XG4gICAgY29uc3QgYWJzb2x1dGVVcmwgPSBuZXcgVVJMKFwiL1wiLCByZXF1ZXN0Lm5leHRVcmwub3JpZ2luKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KGFic29sdXRlVXJsLnRvU3RyaW5nKCkpO1xuICB9XG5cbiAgLy8gUGVyZm9ybSBsb2dnaW5nIGlmIHRoZSByZXF1ZXN0IFVSTCBpbmNsdWRlcyBcIi9hcGkvbm90ZXNcIlxuICBpZiAocmVxdWVzdC51cmwuaW5jbHVkZXMoXCIvYXBpL25vdGVzXCIpKSB7XG4gICAgY29uc3QgbG9nUmVzdWx0ID0gbG9nZ2luZ01pZGRsZXdhcmUocmVxdWVzdCk7XG4gICAgY29uc29sZS5sb2coXCJsb2dSZXN1bHRcIiwgbG9nUmVzdWx0LnJlc3BvbnNlKTtcbiAgfVxuXG4gIC8vIENoZWNrIGF1dGhlbnRpY2F0aW9uIHZhbGlkaXR5IHVzaW5nIGF1dGhNaWRkbGV3YXJlXG4gIGNvbnN0IGF1dGhSZXN1bHQgPSBhdXRoTWlkZGxld2FyZShyZXF1ZXN0KTtcblxuICBpZiAoIWF1dGhSZXN1bHQ/LmlzVmFsaWQpIHtcbiAgICAvLyBSZXR1cm4gYSByZXNwb25zZSBpbW1lZGlhdGVseSBpZiB0aGUgdXNlciBpcyBub3QgYXV0aG9yaXplZFxuICAgIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHsgbWVzc2FnZTogXCJ1bmF1dGhvcml6ZWRcIiB9KSwge1xuICAgICAgc3RhdHVzOiA0MDEsXG4gICAgfSk7XG4gIH1cblxuICAvLyBJZiBubyBlYXJseSByZXR1cm4gaGFzIG9jY3VycmVkLCBwcm9jZWVkIHdpdGggdGhlIHJlcXVlc3RcbiAgcmV0dXJuIE5leHRSZXNwb25zZS5uZXh0KCk7XG59XG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiYXV0aE1pZGRsZXdhcmUiLCJsb2dnaW5nTWlkZGxld2FyZSIsImNvb2tpZXMiLCJjb25maWciLCJtYXRjaGVyIiwicHJvdGVjdGVkUm91dGVzIiwibWlkZGxld2FyZSIsInJlcXVlc3QiLCJ0b2tlbiIsImdldCIsImNvbnNvbGUiLCJsb2ciLCJpbmNsdWRlcyIsIm5leHRVcmwiLCJwYXRobmFtZSIsImFic29sdXRlVXJsIiwiVVJMIiwib3JpZ2luIiwicmVkaXJlY3QiLCJ0b1N0cmluZyIsInVybCIsImxvZ1Jlc3VsdCIsInJlc3BvbnNlIiwiYXV0aFJlc3VsdCIsImlzVmFsaWQiLCJKU09OIiwic3RyaW5naWZ5IiwibWVzc2FnZSIsInN0YXR1cyIsIm5leHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ })

});