"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src/middleware",{

/***/ "(middleware)/./src/lib/routes.ts":
/*!***************************!*\
  !*** ./src/lib/routes.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LOGIN: () => (/* binding */ LOGIN),\n/* harmony export */   PROTECTED_SUB_ROUTES: () => (/* binding */ PROTECTED_SUB_ROUTES),\n/* harmony export */   PUBLIC_ROUTES: () => (/* binding */ PUBLIC_ROUTES),\n/* harmony export */   ROOT: () => (/* binding */ ROOT)\n/* harmony export */ });\nconst LOGIN = \"/login\";\nconst ROOT = \"/\";\nconst PUBLIC_ROUTES = [\n    \"/login\",\n    \"/register\",\n    \"/products\",\n    \"/api/auth/callback/google\",\n    \"/api/auth/callback/github\"\n];\nconst PROTECTED_SUB_ROUTES = [\n    \"/checkout\"\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL2xpYi9yb3V0ZXMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNPLE1BQU1BLFFBQVEsU0FBUztBQUN2QixNQUFNQyxPQUFPLElBQUk7QUFFakIsTUFBTUMsZ0JBQWdCO0lBQ3pCO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Q0FDSDtBQUVNLE1BQU1DLHVCQUF1QjtJQUNoQztDQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9saWIvcm91dGVzLnRzPzQ5ZDMiXSwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgY29uc3QgTE9HSU4gPSAnL2xvZ2luJztcbmV4cG9ydCBjb25zdCBST09UID0gJy8nO1xuXG5leHBvcnQgY29uc3QgUFVCTElDX1JPVVRFUyA9IFtcbiAgICAnL2xvZ2luJyxcbiAgICAnL3JlZ2lzdGVyJyxcbiAgICAnL3Byb2R1Y3RzJyxcbiAgICAnL2FwaS9hdXRoL2NhbGxiYWNrL2dvb2dsZScsXG4gICAgJy9hcGkvYXV0aC9jYWxsYmFjay9naXRodWInLFxuXVxuXG5leHBvcnQgY29uc3QgUFJPVEVDVEVEX1NVQl9ST1VURVMgPSBbXG4gICAgJy9jaGVja291dCcsXG5dIl0sIm5hbWVzIjpbIkxPR0lOIiwiUk9PVCIsIlBVQkxJQ19ST1VURVMiLCJQUk9URUNURURfU1VCX1JPVVRFUyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./src/lib/routes.ts\n");

/***/ }),

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var _auth_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auth.config */ \"(middleware)/./src/auth.config.ts\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth */ \"(middleware)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_routes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/routes */ \"(middleware)/./src/lib/routes.ts\");\n// import { NextRequest, NextResponse } from \"next/server\";\n// import { authMiddleware } from \"../middlewares/apis/authMiddleware\";\n// import { loggingMiddleware } from \"../middlewares/apis/loggingMiddleware\";\n// import {getServerSession} from 'next-auth'\n// export const config = {\n//     matcher: \"/api/:path*\"\n// }\n// const protectedRoutes = [\"/middlewareComp\"]\n// export async function  middleware(request:NextRequest){\n//     const session = await getServerSession()\n//     if(!session && protectedRoutes.includes(request.nextUrl.pathname)){\n//         const abosulteUrl = new URL('/', request.nextUrl.origin)\n//         return NextResponse.redirect(abosulteUrl.toString())\n//     }\n//     // if(request.url.includes(\"/api/notes\")){\n//     //     const logResult = loggingMiddleware(request)\n//     //     console.log(\"logResult\",logResult.response)\n//     // }\n//     // const authResult = authMiddleware(request)\n//     // if(!authResult?.isValid){\n//     //     return new NextResponse(JSON.stringify({message: 'unauthorized'}), {status: 401})\n//     // }\n//     const requestHeaders = new Headers(request.headers);\n//   const response = NextResponse.next({\n//     request: {\n//       headers: requestHeaders,\n//     },\n//   });\n//   return response;\n// }\n//  Runnning middleware\n// import { NextRequest, NextResponse } from \"next/server\";\n// import { authMiddleware } from \"../middlewares/apis/authMiddleware\";\n// import { loggingMiddleware } from \"../middlewares/apis/loggingMiddleware\";\n// import { cookies } from \"next/headers\";\n// export const config = {\n//   matcher: [\"/api\", \"/middlewareComp\"],\n// };\n// const protectedRoutes = [\"/middlewareComp\"];\n// export async function middleware(request: NextRequest) {\n//     let token:any =  cookies()?.get('midToken');\n//   // Fetch the session once and await it if it is an async operation\n// //   const session = await getServerSession();\n// //   console.log(session,\"seeeeeee\")\n//   // Check if the session is missing and the route is protected\n//   if (!token.value && protectedRoutes.includes(request.nextUrl.pathname)) {\n//     const absoluteUrl = new URL(\"/\", request.nextUrl.origin);\n//     return NextResponse.redirect(absoluteUrl.toString());\n//   }\n//   // Perform logging if the request URL includes \"/api/notes\"\n//   if (request.url.includes(\"/api/notes\")) {\n//     const logResult = loggingMiddleware(request);\n//     console.log(\"logResult\", logResult.response);\n//   }\n//   // Check authentication validity using authMiddleware\n//   const authResult = authMiddleware(request);\n//   if (!authResult?.isValid) {\n//     // Return a response immediately if the user is not authorized\n//     return new NextResponse(JSON.stringify({ message: \"unauthorized\" }), {\n//       status: 401,\n//     });\n//   }\n//   // If no early return has occurred, proceed with the request\n//   return NextResponse.next();\n// }\n\n\nconst { auth } = next_auth__WEBPACK_IMPORTED_MODULE_1___default()(_auth_config__WEBPACK_IMPORTED_MODULE_0__.authConfig);\n\nasync function middleware(request) {\n    const { nextUrl } = request;\n    const session = await auth();\n    const isAuthenticated = !!session?.user;\n    console.log(isAuthenticated, nextUrl.pathname);\n    const isPublicRoute = (_lib_routes__WEBPACK_IMPORTED_MODULE_2__.PUBLIC_ROUTES.find((route)=>nextUrl.pathname.startsWith(route)) || nextUrl.pathname === _lib_routes__WEBPACK_IMPORTED_MODULE_2__.ROOT) && !_lib_routes__WEBPACK_IMPORTED_MODULE_2__.PROTECTED_SUB_ROUTES.find((route)=>nextUrl.pathname.includes(route));\n    console.log(isPublicRoute);\n    if (!isAuthenticated && !isPublicRoute) return Response.redirect(new URL(_lib_routes__WEBPACK_IMPORTED_MODULE_2__.LOGIN, nextUrl));\n}\nconst config = {\n    matcher: [\n        \"/((?!.+\\\\.[\\\\w]+$|_next).*)\",\n        \"/\",\n        \"/(api|trpc)(.*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsMkRBQTJEO0FBQzNELHVFQUF1RTtBQUN2RSw2RUFBNkU7QUFDN0UsNkNBQTZDO0FBRTdDLDBCQUEwQjtBQUMxQiw2QkFBNkI7QUFDN0IsSUFBSTtBQUVKLDhDQUE4QztBQUU5QywwREFBMEQ7QUFDMUQsK0NBQStDO0FBRS9DLDBFQUEwRTtBQUMxRSxtRUFBbUU7QUFDbkUsK0RBQStEO0FBQy9ELFFBQVE7QUFDUixpREFBaUQ7QUFDakQsMERBQTBEO0FBQzFELHlEQUF5RDtBQUN6RCxXQUFXO0FBQ1gsb0RBQW9EO0FBRXBELG1DQUFtQztBQUNuQywrRkFBK0Y7QUFDL0YsV0FBVztBQUNYLDJEQUEyRDtBQUMzRCx5Q0FBeUM7QUFDekMsaUJBQWlCO0FBQ2pCLGlDQUFpQztBQUNqQyxTQUFTO0FBQ1QsUUFBUTtBQUNSLHFCQUFxQjtBQUNyQixJQUFJO0FBRUosdUJBQXVCO0FBR3ZCLDJEQUEyRDtBQUMzRCx1RUFBdUU7QUFDdkUsNkVBQTZFO0FBQzdFLDBDQUEwQztBQUUxQywwQkFBMEI7QUFDMUIsMENBQTBDO0FBQzFDLEtBQUs7QUFFTCwrQ0FBK0M7QUFFL0MsMkRBQTJEO0FBQzNELG1EQUFtRDtBQUVuRCx1RUFBdUU7QUFDdkUsaURBQWlEO0FBQ2pELHVDQUF1QztBQUN2QyxrRUFBa0U7QUFDbEUsOEVBQThFO0FBQzlFLGdFQUFnRTtBQUNoRSw0REFBNEQ7QUFDNUQsTUFBTTtBQUVOLGdFQUFnRTtBQUNoRSw4Q0FBOEM7QUFDOUMsb0RBQW9EO0FBQ3BELG9EQUFvRDtBQUNwRCxNQUFNO0FBRU4sMERBQTBEO0FBQzFELGdEQUFnRDtBQUVoRCxnQ0FBZ0M7QUFDaEMscUVBQXFFO0FBQ3JFLDZFQUE2RTtBQUM3RSxxQkFBcUI7QUFDckIsVUFBVTtBQUNWLE1BQU07QUFFTixpRUFBaUU7QUFDakUsZ0NBQWdDO0FBQ2hDLElBQUk7QUFLdUM7QUFDVjtBQUVqQyxNQUFNLEVBQUVFLElBQUksRUFBRSxHQUFHRCxnREFBUUEsQ0FBQ0Qsb0RBQVVBO0FBRTBDO0FBRXZFLGVBQWVPLFdBQVdDLE9BQVc7SUFDMUMsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBR0Q7SUFDcEIsTUFBTUUsVUFBVSxNQUFNUjtJQUN0QixNQUFNUyxrQkFBa0IsQ0FBQyxDQUFDRCxTQUFTRTtJQUNuQ0MsUUFBUUMsR0FBRyxDQUFDSCxpQkFBaUJGLFFBQVFNLFFBQVE7SUFFN0MsTUFBTUMsZ0JBQWlCLENBQUNiLHNEQUFhQSxDQUFDYyxJQUFJLENBQUNDLENBQUFBLFFBQVNULFFBQVFNLFFBQVEsQ0FBQ0ksVUFBVSxDQUFDRCxXQUM3RVQsUUFBUU0sUUFBUSxLQUFLViw2Q0FBRyxLQUFNLENBQUNDLDZEQUFvQkEsQ0FBQ1csSUFBSSxDQUFDQyxDQUFBQSxRQUFTVCxRQUFRTSxRQUFRLENBQUNLLFFBQVEsQ0FBQ0Y7SUFFL0ZMLFFBQVFDLEdBQUcsQ0FBQ0U7SUFFWixJQUFJLENBQUNMLG1CQUFtQixDQUFDSyxlQUN2QixPQUFPSyxTQUFTQyxRQUFRLENBQUMsSUFBSUMsSUFBSW5CLDhDQUFLQSxFQUFFSztBQUM1QztBQUVPLE1BQU1lLFNBQVM7SUFDcEJDLFNBQVM7UUFBQztRQUErQjtRQUFLO0tBQWtCO0FBQ2xFLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL21pZGRsZXdhcmUudHM/ZDE5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSBcIm5leHQvc2VydmVyXCI7XG4vLyBpbXBvcnQgeyBhdXRoTWlkZGxld2FyZSB9IGZyb20gXCIuLi9taWRkbGV3YXJlcy9hcGlzL2F1dGhNaWRkbGV3YXJlXCI7XG4vLyBpbXBvcnQgeyBsb2dnaW5nTWlkZGxld2FyZSB9IGZyb20gXCIuLi9taWRkbGV3YXJlcy9hcGlzL2xvZ2dpbmdNaWRkbGV3YXJlXCI7XG4vLyBpbXBvcnQge2dldFNlcnZlclNlc3Npb259IGZyb20gJ25leHQtYXV0aCdcblxuLy8gZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcbi8vICAgICBtYXRjaGVyOiBcIi9hcGkvOnBhdGgqXCJcbi8vIH1cblxuLy8gY29uc3QgcHJvdGVjdGVkUm91dGVzID0gW1wiL21pZGRsZXdhcmVDb21wXCJdXG5cbi8vIGV4cG9ydCBhc3luYyBmdW5jdGlvbiAgbWlkZGxld2FyZShyZXF1ZXN0Ok5leHRSZXF1ZXN0KXtcbi8vICAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgZ2V0U2VydmVyU2Vzc2lvbigpXG5cbi8vICAgICBpZighc2Vzc2lvbiAmJiBwcm90ZWN0ZWRSb3V0ZXMuaW5jbHVkZXMocmVxdWVzdC5uZXh0VXJsLnBhdGhuYW1lKSl7XG4vLyAgICAgICAgIGNvbnN0IGFib3N1bHRlVXJsID0gbmV3IFVSTCgnLycsIHJlcXVlc3QubmV4dFVybC5vcmlnaW4pXG4vLyAgICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QoYWJvc3VsdGVVcmwudG9TdHJpbmcoKSlcbi8vICAgICB9XG4vLyAgICAgLy8gaWYocmVxdWVzdC51cmwuaW5jbHVkZXMoXCIvYXBpL25vdGVzXCIpKXtcbi8vICAgICAvLyAgICAgY29uc3QgbG9nUmVzdWx0ID0gbG9nZ2luZ01pZGRsZXdhcmUocmVxdWVzdClcbi8vICAgICAvLyAgICAgY29uc29sZS5sb2coXCJsb2dSZXN1bHRcIixsb2dSZXN1bHQucmVzcG9uc2UpXG4vLyAgICAgLy8gfVxuLy8gICAgIC8vIGNvbnN0IGF1dGhSZXN1bHQgPSBhdXRoTWlkZGxld2FyZShyZXF1ZXN0KVxuXG4vLyAgICAgLy8gaWYoIWF1dGhSZXN1bHQ/LmlzVmFsaWQpe1xuLy8gICAgIC8vICAgICByZXR1cm4gbmV3IE5leHRSZXNwb25zZShKU09OLnN0cmluZ2lmeSh7bWVzc2FnZTogJ3VuYXV0aG9yaXplZCd9KSwge3N0YXR1czogNDAxfSlcbi8vICAgICAvLyB9XG4vLyAgICAgY29uc3QgcmVxdWVzdEhlYWRlcnMgPSBuZXcgSGVhZGVycyhyZXF1ZXN0LmhlYWRlcnMpO1xuLy8gICBjb25zdCByZXNwb25zZSA9IE5leHRSZXNwb25zZS5uZXh0KHtcbi8vICAgICByZXF1ZXN0OiB7XG4vLyAgICAgICBoZWFkZXJzOiByZXF1ZXN0SGVhZGVycyxcbi8vICAgICB9LFxuLy8gICB9KTtcbi8vICAgcmV0dXJuIHJlc3BvbnNlO1xuLy8gfVxuXG4vLyAgUnVubm5pbmcgbWlkZGxld2FyZVxuXG5cbi8vIGltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcbi8vIGltcG9ydCB7IGF1dGhNaWRkbGV3YXJlIH0gZnJvbSBcIi4uL21pZGRsZXdhcmVzL2FwaXMvYXV0aE1pZGRsZXdhcmVcIjtcbi8vIGltcG9ydCB7IGxvZ2dpbmdNaWRkbGV3YXJlIH0gZnJvbSBcIi4uL21pZGRsZXdhcmVzL2FwaXMvbG9nZ2luZ01pZGRsZXdhcmVcIjtcbi8vIGltcG9ydCB7IGNvb2tpZXMgfSBmcm9tIFwibmV4dC9oZWFkZXJzXCI7XG5cbi8vIGV4cG9ydCBjb25zdCBjb25maWcgPSB7XG4vLyAgIG1hdGNoZXI6IFtcIi9hcGlcIiwgXCIvbWlkZGxld2FyZUNvbXBcIl0sXG4vLyB9O1xuXG4vLyBjb25zdCBwcm90ZWN0ZWRSb3V0ZXMgPSBbXCIvbWlkZGxld2FyZUNvbXBcIl07XG5cbi8vIGV4cG9ydCBhc3luYyBmdW5jdGlvbiBtaWRkbGV3YXJlKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4vLyAgICAgbGV0IHRva2VuOmFueSA9ICBjb29raWVzKCk/LmdldCgnbWlkVG9rZW4nKTtcbiAgICBcbi8vICAgLy8gRmV0Y2ggdGhlIHNlc3Npb24gb25jZSBhbmQgYXdhaXQgaXQgaWYgaXQgaXMgYW4gYXN5bmMgb3BlcmF0aW9uXG4vLyAvLyAgIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBnZXRTZXJ2ZXJTZXNzaW9uKCk7XG4vLyAvLyAgIGNvbnNvbGUubG9nKHNlc3Npb24sXCJzZWVlZWVlZVwiKVxuLy8gICAvLyBDaGVjayBpZiB0aGUgc2Vzc2lvbiBpcyBtaXNzaW5nIGFuZCB0aGUgcm91dGUgaXMgcHJvdGVjdGVkXG4vLyAgIGlmICghdG9rZW4udmFsdWUgJiYgcHJvdGVjdGVkUm91dGVzLmluY2x1ZGVzKHJlcXVlc3QubmV4dFVybC5wYXRobmFtZSkpIHtcbi8vICAgICBjb25zdCBhYnNvbHV0ZVVybCA9IG5ldyBVUkwoXCIvXCIsIHJlcXVlc3QubmV4dFVybC5vcmlnaW4pO1xuLy8gICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QoYWJzb2x1dGVVcmwudG9TdHJpbmcoKSk7XG4vLyAgIH1cblxuLy8gICAvLyBQZXJmb3JtIGxvZ2dpbmcgaWYgdGhlIHJlcXVlc3QgVVJMIGluY2x1ZGVzIFwiL2FwaS9ub3Rlc1wiXG4vLyAgIGlmIChyZXF1ZXN0LnVybC5pbmNsdWRlcyhcIi9hcGkvbm90ZXNcIikpIHtcbi8vICAgICBjb25zdCBsb2dSZXN1bHQgPSBsb2dnaW5nTWlkZGxld2FyZShyZXF1ZXN0KTtcbi8vICAgICBjb25zb2xlLmxvZyhcImxvZ1Jlc3VsdFwiLCBsb2dSZXN1bHQucmVzcG9uc2UpO1xuLy8gICB9XG5cbi8vICAgLy8gQ2hlY2sgYXV0aGVudGljYXRpb24gdmFsaWRpdHkgdXNpbmcgYXV0aE1pZGRsZXdhcmVcbi8vICAgY29uc3QgYXV0aFJlc3VsdCA9IGF1dGhNaWRkbGV3YXJlKHJlcXVlc3QpO1xuXG4vLyAgIGlmICghYXV0aFJlc3VsdD8uaXNWYWxpZCkge1xuLy8gICAgIC8vIFJldHVybiBhIHJlc3BvbnNlIGltbWVkaWF0ZWx5IGlmIHRoZSB1c2VyIGlzIG5vdCBhdXRob3JpemVkXG4vLyAgICAgcmV0dXJuIG5ldyBOZXh0UmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkoeyBtZXNzYWdlOiBcInVuYXV0aG9yaXplZFwiIH0pLCB7XG4vLyAgICAgICBzdGF0dXM6IDQwMSxcbi8vICAgICB9KTtcbi8vICAgfVxuXG4vLyAgIC8vIElmIG5vIGVhcmx5IHJldHVybiBoYXMgb2NjdXJyZWQsIHByb2NlZWQgd2l0aCB0aGUgcmVxdWVzdFxuLy8gICByZXR1cm4gTmV4dFJlc3BvbnNlLm5leHQoKTtcbi8vIH1cblxuXG5cbmltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xuaW1wb3J0IHsgYXV0aENvbmZpZyB9IGZyb20gXCIuL2F1dGguY29uZmlnXCI7XG5pbXBvcnQgTmV4dEF1dGggZnJvbSBcIm5leHQtYXV0aFwiO1xuXG5jb25zdCB7IGF1dGggfSA9IE5leHRBdXRoKGF1dGhDb25maWcpO1xuXG5pbXBvcnQge1BVQkxJQ19ST1VURVMsIExPR0lOLCBST09ULCBQUk9URUNURURfU1VCX1JPVVRFU30gZnJvbSBcIkAvbGliL3JvdXRlc1wiO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWlkZGxld2FyZShyZXF1ZXN0OmFueSkge1xuICBjb25zdCB7IG5leHRVcmwgfSA9IHJlcXVlc3Q7XG4gIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBhdXRoKCk7XG4gIGNvbnN0IGlzQXV0aGVudGljYXRlZCA9ICEhc2Vzc2lvbj8udXNlcjtcbiAgY29uc29sZS5sb2coaXNBdXRoZW50aWNhdGVkLCBuZXh0VXJsLnBhdGhuYW1lKTtcblxuICBjb25zdCBpc1B1YmxpY1JvdXRlID0gKChQVUJMSUNfUk9VVEVTLmZpbmQocm91dGUgPT4gbmV4dFVybC5wYXRobmFtZS5zdGFydHNXaXRoKHJvdXRlKSlcbiAgfHwgbmV4dFVybC5wYXRobmFtZSA9PT0gUk9PVCkgJiYgIVBST1RFQ1RFRF9TVUJfUk9VVEVTLmZpbmQocm91dGUgPT4gbmV4dFVybC5wYXRobmFtZS5pbmNsdWRlcyhyb3V0ZSkpKTtcblxuICBjb25zb2xlLmxvZyhpc1B1YmxpY1JvdXRlKTtcblxuICBpZiAoIWlzQXV0aGVudGljYXRlZCAmJiAhaXNQdWJsaWNSb3V0ZSlcbiAgICByZXR1cm4gUmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTChMT0dJTiwgbmV4dFVybCkpO1xufVxuXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBtYXRjaGVyOiBbXCIvKCg/IS4rXFxcXC5bXFxcXHddKyR8X25leHQpLiopXCIsIFwiL1wiLCBcIi8oYXBpfHRycGMpKC4qKVwiXVxufTsiXSwibmFtZXMiOlsiYXV0aENvbmZpZyIsIk5leHRBdXRoIiwiYXV0aCIsIlBVQkxJQ19ST1VURVMiLCJMT0dJTiIsIlJPT1QiLCJQUk9URUNURURfU1VCX1JPVVRFUyIsIm1pZGRsZXdhcmUiLCJyZXF1ZXN0IiwibmV4dFVybCIsInNlc3Npb24iLCJpc0F1dGhlbnRpY2F0ZWQiLCJ1c2VyIiwiY29uc29sZSIsImxvZyIsInBhdGhuYW1lIiwiaXNQdWJsaWNSb3V0ZSIsImZpbmQiLCJyb3V0ZSIsInN0YXJ0c1dpdGgiLCJpbmNsdWRlcyIsIlJlc3BvbnNlIiwicmVkaXJlY3QiLCJVUkwiLCJjb25maWciLCJtYXRjaGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ })

});