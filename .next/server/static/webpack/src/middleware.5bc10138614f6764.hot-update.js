"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src/middleware",{

/***/ "(middleware)/./src/lib/routes.ts":
/*!***************************!*\
  !*** ./src/lib/routes.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LOGIN: () => (/* binding */ LOGIN),\n/* harmony export */   PROTECTED_SUB_ROUTES: () => (/* binding */ PROTECTED_SUB_ROUTES),\n/* harmony export */   ROOT: () => (/* binding */ ROOT)\n/* harmony export */ });\nconst LOGIN = \"/login\";\nconst ROOT = \"/\";\n// export const PUBLIC_ROUTES = [\n//     '/login',\n//     '/register',\n//     '/api/auth/callback/github',\n// ]\nconst PROTECTED_SUB_ROUTES = [\n    \"/middlewareComp\"\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL2xpYi9yb3V0ZXMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ08sTUFBTUEsUUFBUSxTQUFTO0FBQ3ZCLE1BQU1DLE9BQU8sSUFBSTtBQUV4QixpQ0FBaUM7QUFDakMsZ0JBQWdCO0FBQ2hCLG1CQUFtQjtBQUNuQixtQ0FBbUM7QUFDbkMsSUFBSTtBQUVHLE1BQU1DLHVCQUF1QjtJQUNoQztDQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9saWIvcm91dGVzLnRzPzQ5ZDMiXSwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgY29uc3QgTE9HSU4gPSAnL2xvZ2luJztcbmV4cG9ydCBjb25zdCBST09UID0gJy8nO1xuXG4vLyBleHBvcnQgY29uc3QgUFVCTElDX1JPVVRFUyA9IFtcbi8vICAgICAnL2xvZ2luJyxcbi8vICAgICAnL3JlZ2lzdGVyJyxcbi8vICAgICAnL2FwaS9hdXRoL2NhbGxiYWNrL2dpdGh1YicsXG4vLyBdXG5cbmV4cG9ydCBjb25zdCBQUk9URUNURURfU1VCX1JPVVRFUyA9IFtcbiAgICAnL21pZGRsZXdhcmVDb21wJyxcbl0iXSwibmFtZXMiOlsiTE9HSU4iLCJST09UIiwiUFJPVEVDVEVEX1NVQl9ST1VURVMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./src/lib/routes.ts\n");

/***/ }),

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var _auth_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auth.config */ \"(middleware)/./src/auth.config.ts\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth */ \"(middleware)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_routes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/routes */ \"(middleware)/./src/lib/routes.ts\");\n// import { NextRequest, NextResponse } from \"next/server\";\n// import { authMiddleware } from \"../middlewares/apis/authMiddleware\";\n// import { loggingMiddleware } from \"../middlewares/apis/loggingMiddleware\";\n// import {getServerSession} from 'next-auth'\n// export const config = {\n//     matcher: \"/api/:path*\"\n// }\n// const protectedRoutes = [\"/middlewareComp\"]\n// export async function  middleware(request:NextRequest){\n//     const session = await getServerSession()\n//     if(!session && protectedRoutes.includes(request.nextUrl.pathname)){\n//         const abosulteUrl = new URL('/', request.nextUrl.origin)\n//         return NextResponse.redirect(abosulteUrl.toString())\n//     }\n//     // if(request.url.includes(\"/api/notes\")){\n//     //     const logResult = loggingMiddleware(request)\n//     //     console.log(\"logResult\",logResult.response)\n//     // }\n//     // const authResult = authMiddleware(request)\n//     // if(!authResult?.isValid){\n//     //     return new NextResponse(JSON.stringify({message: 'unauthorized'}), {status: 401})\n//     // }\n//     const requestHeaders = new Headers(request.headers);\n//   const response = NextResponse.next({\n//     request: {\n//       headers: requestHeaders,\n//     },\n//   });\n//   return response;\n// }\n//  Runnning middleware\n// import { NextRequest, NextResponse } from \"next/server\";\n// import { authMiddleware } from \"../middlewares/apis/authMiddleware\";\n// import { loggingMiddleware } from \"../middlewares/apis/loggingMiddleware\";\n// import { cookies } from \"next/headers\";\n// export const config = {\n//   matcher: [\"/api\", \"/middlewareComp\"],\n// };\n// const protectedRoutes = [\"/middlewareComp\"];\n// export async function middleware(request: NextRequest) {\n//     let token:any =  cookies()?.get('midToken');\n//   // Fetch the session once and await it if it is an async operation\n// //   const session = await getServerSession();\n// //   console.log(session,\"seeeeeee\")\n//   // Check if the session is missing and the route is protected\n//   if (!token.value && protectedRoutes.includes(request.nextUrl.pathname)) {\n//     const absoluteUrl = new URL(\"/\", request.nextUrl.origin);\n//     return NextResponse.redirect(absoluteUrl.toString());\n//   }\n//   // Perform logging if the request URL includes \"/api/notes\"\n//   if (request.url.includes(\"/api/notes\")) {\n//     const logResult = loggingMiddleware(request);\n//     console.log(\"logResult\", logResult.response);\n//   }\n//   // Check authentication validity using authMiddleware\n//   const authResult = authMiddleware(request);\n//   if (!authResult?.isValid) {\n//     // Return a response immediately if the user is not authorized\n//     return new NextResponse(JSON.stringify({ message: \"unauthorized\" }), {\n//       status: 401,\n//     });\n//   }\n//   // If no early return has occurred, proceed with the request\n//   return NextResponse.next();\n// }\n\n\nconst { auth } = next_auth__WEBPACK_IMPORTED_MODULE_1___default()(_auth_config__WEBPACK_IMPORTED_MODULE_0__.authConfig);\n\nasync function middleware(request) {\n    const { nextUrl } = request;\n    const session = await auth();\n    const isAuthenticated = !!session?.user;\n    console.log(isAuthenticated, nextUrl.pathname);\n    const isPublicRoute = (_lib_routes__WEBPACK_IMPORTED_MODULE_2__.PUBLIC_ROUTES.find((route)=>nextUrl.pathname.startsWith(route)) || nextUrl.pathname === _lib_routes__WEBPACK_IMPORTED_MODULE_2__.ROOT) && !_lib_routes__WEBPACK_IMPORTED_MODULE_2__.PROTECTED_SUB_ROUTES.find((route)=>nextUrl.pathname.includes(route));\n    console.log(isPublicRoute);\n    if (!isAuthenticated && !isPublicRoute) return Response.redirect(new URL(_lib_routes__WEBPACK_IMPORTED_MODULE_2__.LOGIN, nextUrl));\n}\nconst config = {\n    matcher: [\n        \"/((?!.+\\\\.[\\\\w]+$|_next).*)\",\n        \"/\",\n        \"/(api|trpc)(.*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsMkRBQTJEO0FBQzNELHVFQUF1RTtBQUN2RSw2RUFBNkU7QUFDN0UsNkNBQTZDO0FBRTdDLDBCQUEwQjtBQUMxQiw2QkFBNkI7QUFDN0IsSUFBSTtBQUVKLDhDQUE4QztBQUU5QywwREFBMEQ7QUFDMUQsK0NBQStDO0FBRS9DLDBFQUEwRTtBQUMxRSxtRUFBbUU7QUFDbkUsK0RBQStEO0FBQy9ELFFBQVE7QUFDUixpREFBaUQ7QUFDakQsMERBQTBEO0FBQzFELHlEQUF5RDtBQUN6RCxXQUFXO0FBQ1gsb0RBQW9EO0FBRXBELG1DQUFtQztBQUNuQywrRkFBK0Y7QUFDL0YsV0FBVztBQUNYLDJEQUEyRDtBQUMzRCx5Q0FBeUM7QUFDekMsaUJBQWlCO0FBQ2pCLGlDQUFpQztBQUNqQyxTQUFTO0FBQ1QsUUFBUTtBQUNSLHFCQUFxQjtBQUNyQixJQUFJO0FBRUosdUJBQXVCO0FBR3ZCLDJEQUEyRDtBQUMzRCx1RUFBdUU7QUFDdkUsNkVBQTZFO0FBQzdFLDBDQUEwQztBQUUxQywwQkFBMEI7QUFDMUIsMENBQTBDO0FBQzFDLEtBQUs7QUFFTCwrQ0FBK0M7QUFFL0MsMkRBQTJEO0FBQzNELG1EQUFtRDtBQUVuRCx1RUFBdUU7QUFDdkUsaURBQWlEO0FBQ2pELHVDQUF1QztBQUN2QyxrRUFBa0U7QUFDbEUsOEVBQThFO0FBQzlFLGdFQUFnRTtBQUNoRSw0REFBNEQ7QUFDNUQsTUFBTTtBQUVOLGdFQUFnRTtBQUNoRSw4Q0FBOEM7QUFDOUMsb0RBQW9EO0FBQ3BELG9EQUFvRDtBQUNwRCxNQUFNO0FBRU4sMERBQTBEO0FBQzFELGdEQUFnRDtBQUVoRCxnQ0FBZ0M7QUFDaEMscUVBQXFFO0FBQ3JFLDZFQUE2RTtBQUM3RSxxQkFBcUI7QUFDckIsVUFBVTtBQUNWLE1BQU07QUFFTixpRUFBaUU7QUFDakUsZ0NBQWdDO0FBQ2hDLElBQUk7QUFLdUM7QUFDVjtBQUVqQyxNQUFNLEVBQUVFLElBQUksRUFBRSxHQUFHRCxnREFBUUEsQ0FBQ0Qsb0RBQVVBO0FBRTBDO0FBRXZFLGVBQWVPLFdBQVdDLE9BQVc7SUFDMUMsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBR0Q7SUFDcEIsTUFBTUUsVUFBVSxNQUFNUjtJQUN0QixNQUFNUyxrQkFBa0IsQ0FBQyxDQUFDRCxTQUFTRTtJQUNuQ0MsUUFBUUMsR0FBRyxDQUFDSCxpQkFBaUJGLFFBQVFNLFFBQVE7SUFFN0MsTUFBTUMsZ0JBQWlCLENBQUNiLDJEQUFrQixDQUFDZSxDQUFBQSxRQUFTVCxRQUFRTSxRQUFRLENBQUNJLFVBQVUsQ0FBQ0QsV0FDN0VULFFBQVFNLFFBQVEsS0FBS1YsNkNBQUcsS0FBTSxDQUFDQyw2REFBb0JBLENBQUNXLElBQUksQ0FBQ0MsQ0FBQUEsUUFBU1QsUUFBUU0sUUFBUSxDQUFDSyxRQUFRLENBQUNGO0lBRS9GTCxRQUFRQyxHQUFHLENBQUNFO0lBRVosSUFBSSxDQUFDTCxtQkFBbUIsQ0FBQ0ssZUFDdkIsT0FBT0ssU0FBU0MsUUFBUSxDQUFDLElBQUlDLElBQUluQiw4Q0FBS0EsRUFBRUs7QUFDNUM7QUFFTyxNQUFNZSxTQUFTO0lBQ3BCQyxTQUFTO1FBQUM7UUFBK0I7UUFBSztLQUFrQjtBQUNsRSxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9taWRkbGV3YXJlLnRzP2QxOTkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xuLy8gaW1wb3J0IHsgYXV0aE1pZGRsZXdhcmUgfSBmcm9tIFwiLi4vbWlkZGxld2FyZXMvYXBpcy9hdXRoTWlkZGxld2FyZVwiO1xuLy8gaW1wb3J0IHsgbG9nZ2luZ01pZGRsZXdhcmUgfSBmcm9tIFwiLi4vbWlkZGxld2FyZXMvYXBpcy9sb2dnaW5nTWlkZGxld2FyZVwiO1xuLy8gaW1wb3J0IHtnZXRTZXJ2ZXJTZXNzaW9ufSBmcm9tICduZXh0LWF1dGgnXG5cbi8vIGV4cG9ydCBjb25zdCBjb25maWcgPSB7XG4vLyAgICAgbWF0Y2hlcjogXCIvYXBpLzpwYXRoKlwiXG4vLyB9XG5cbi8vIGNvbnN0IHByb3RlY3RlZFJvdXRlcyA9IFtcIi9taWRkbGV3YXJlQ29tcFwiXVxuXG4vLyBleHBvcnQgYXN5bmMgZnVuY3Rpb24gIG1pZGRsZXdhcmUocmVxdWVzdDpOZXh0UmVxdWVzdCl7XG4vLyAgICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGdldFNlcnZlclNlc3Npb24oKVxuXG4vLyAgICAgaWYoIXNlc3Npb24gJiYgcHJvdGVjdGVkUm91dGVzLmluY2x1ZGVzKHJlcXVlc3QubmV4dFVybC5wYXRobmFtZSkpe1xuLy8gICAgICAgICBjb25zdCBhYm9zdWx0ZVVybCA9IG5ldyBVUkwoJy8nLCByZXF1ZXN0Lm5leHRVcmwub3JpZ2luKVxuLy8gICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KGFib3N1bHRlVXJsLnRvU3RyaW5nKCkpXG4vLyAgICAgfVxuLy8gICAgIC8vIGlmKHJlcXVlc3QudXJsLmluY2x1ZGVzKFwiL2FwaS9ub3Rlc1wiKSl7XG4vLyAgICAgLy8gICAgIGNvbnN0IGxvZ1Jlc3VsdCA9IGxvZ2dpbmdNaWRkbGV3YXJlKHJlcXVlc3QpXG4vLyAgICAgLy8gICAgIGNvbnNvbGUubG9nKFwibG9nUmVzdWx0XCIsbG9nUmVzdWx0LnJlc3BvbnNlKVxuLy8gICAgIC8vIH1cbi8vICAgICAvLyBjb25zdCBhdXRoUmVzdWx0ID0gYXV0aE1pZGRsZXdhcmUocmVxdWVzdClcblxuLy8gICAgIC8vIGlmKCFhdXRoUmVzdWx0Py5pc1ZhbGlkKXtcbi8vICAgICAvLyAgICAgcmV0dXJuIG5ldyBOZXh0UmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkoe21lc3NhZ2U6ICd1bmF1dGhvcml6ZWQnfSksIHtzdGF0dXM6IDQwMX0pXG4vLyAgICAgLy8gfVxuLy8gICAgIGNvbnN0IHJlcXVlc3RIZWFkZXJzID0gbmV3IEhlYWRlcnMocmVxdWVzdC5oZWFkZXJzKTtcbi8vICAgY29uc3QgcmVzcG9uc2UgPSBOZXh0UmVzcG9uc2UubmV4dCh7XG4vLyAgICAgcmVxdWVzdDoge1xuLy8gICAgICAgaGVhZGVyczogcmVxdWVzdEhlYWRlcnMsXG4vLyAgICAgfSxcbi8vICAgfSk7XG4vLyAgIHJldHVybiByZXNwb25zZTtcbi8vIH1cblxuLy8gIFJ1bm5uaW5nIG1pZGRsZXdhcmVcblxuXG4vLyBpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSBcIm5leHQvc2VydmVyXCI7XG4vLyBpbXBvcnQgeyBhdXRoTWlkZGxld2FyZSB9IGZyb20gXCIuLi9taWRkbGV3YXJlcy9hcGlzL2F1dGhNaWRkbGV3YXJlXCI7XG4vLyBpbXBvcnQgeyBsb2dnaW5nTWlkZGxld2FyZSB9IGZyb20gXCIuLi9taWRkbGV3YXJlcy9hcGlzL2xvZ2dpbmdNaWRkbGV3YXJlXCI7XG4vLyBpbXBvcnQgeyBjb29raWVzIH0gZnJvbSBcIm5leHQvaGVhZGVyc1wiO1xuXG4vLyBleHBvcnQgY29uc3QgY29uZmlnID0ge1xuLy8gICBtYXRjaGVyOiBbXCIvYXBpXCIsIFwiL21pZGRsZXdhcmVDb21wXCJdLFxuLy8gfTtcblxuLy8gY29uc3QgcHJvdGVjdGVkUm91dGVzID0gW1wiL21pZGRsZXdhcmVDb21wXCJdO1xuXG4vLyBleHBvcnQgYXN5bmMgZnVuY3Rpb24gbWlkZGxld2FyZShyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuLy8gICAgIGxldCB0b2tlbjphbnkgPSAgY29va2llcygpPy5nZXQoJ21pZFRva2VuJyk7XG4gICAgXG4vLyAgIC8vIEZldGNoIHRoZSBzZXNzaW9uIG9uY2UgYW5kIGF3YWl0IGl0IGlmIGl0IGlzIGFuIGFzeW5jIG9wZXJhdGlvblxuLy8gLy8gICBjb25zdCBzZXNzaW9uID0gYXdhaXQgZ2V0U2VydmVyU2Vzc2lvbigpO1xuLy8gLy8gICBjb25zb2xlLmxvZyhzZXNzaW9uLFwic2VlZWVlZWVcIilcbi8vICAgLy8gQ2hlY2sgaWYgdGhlIHNlc3Npb24gaXMgbWlzc2luZyBhbmQgdGhlIHJvdXRlIGlzIHByb3RlY3RlZFxuLy8gICBpZiAoIXRva2VuLnZhbHVlICYmIHByb3RlY3RlZFJvdXRlcy5pbmNsdWRlcyhyZXF1ZXN0Lm5leHRVcmwucGF0aG5hbWUpKSB7XG4vLyAgICAgY29uc3QgYWJzb2x1dGVVcmwgPSBuZXcgVVJMKFwiL1wiLCByZXF1ZXN0Lm5leHRVcmwub3JpZ2luKTtcbi8vICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KGFic29sdXRlVXJsLnRvU3RyaW5nKCkpO1xuLy8gICB9XG5cbi8vICAgLy8gUGVyZm9ybSBsb2dnaW5nIGlmIHRoZSByZXF1ZXN0IFVSTCBpbmNsdWRlcyBcIi9hcGkvbm90ZXNcIlxuLy8gICBpZiAocmVxdWVzdC51cmwuaW5jbHVkZXMoXCIvYXBpL25vdGVzXCIpKSB7XG4vLyAgICAgY29uc3QgbG9nUmVzdWx0ID0gbG9nZ2luZ01pZGRsZXdhcmUocmVxdWVzdCk7XG4vLyAgICAgY29uc29sZS5sb2coXCJsb2dSZXN1bHRcIiwgbG9nUmVzdWx0LnJlc3BvbnNlKTtcbi8vICAgfVxuXG4vLyAgIC8vIENoZWNrIGF1dGhlbnRpY2F0aW9uIHZhbGlkaXR5IHVzaW5nIGF1dGhNaWRkbGV3YXJlXG4vLyAgIGNvbnN0IGF1dGhSZXN1bHQgPSBhdXRoTWlkZGxld2FyZShyZXF1ZXN0KTtcblxuLy8gICBpZiAoIWF1dGhSZXN1bHQ/LmlzVmFsaWQpIHtcbi8vICAgICAvLyBSZXR1cm4gYSByZXNwb25zZSBpbW1lZGlhdGVseSBpZiB0aGUgdXNlciBpcyBub3QgYXV0aG9yaXplZFxuLy8gICAgIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHsgbWVzc2FnZTogXCJ1bmF1dGhvcml6ZWRcIiB9KSwge1xuLy8gICAgICAgc3RhdHVzOiA0MDEsXG4vLyAgICAgfSk7XG4vLyAgIH1cblxuLy8gICAvLyBJZiBubyBlYXJseSByZXR1cm4gaGFzIG9jY3VycmVkLCBwcm9jZWVkIHdpdGggdGhlIHJlcXVlc3Rcbi8vICAgcmV0dXJuIE5leHRSZXNwb25zZS5uZXh0KCk7XG4vLyB9XG5cblxuXG5pbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcbmltcG9ydCB7IGF1dGhDb25maWcgfSBmcm9tIFwiLi9hdXRoLmNvbmZpZ1wiO1xuaW1wb3J0IE5leHRBdXRoIGZyb20gXCJuZXh0LWF1dGhcIjtcblxuY29uc3QgeyBhdXRoIH0gPSBOZXh0QXV0aChhdXRoQ29uZmlnKTtcblxuaW1wb3J0IHtQVUJMSUNfUk9VVEVTLCBMT0dJTiwgUk9PVCwgUFJPVEVDVEVEX1NVQl9ST1VURVN9IGZyb20gXCJAL2xpYi9yb3V0ZXNcIjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1pZGRsZXdhcmUocmVxdWVzdDphbnkpIHtcbiAgY29uc3QgeyBuZXh0VXJsIH0gPSByZXF1ZXN0O1xuICBjb25zdCBzZXNzaW9uID0gYXdhaXQgYXV0aCgpO1xuICBjb25zdCBpc0F1dGhlbnRpY2F0ZWQgPSAhIXNlc3Npb24/LnVzZXI7XG4gIGNvbnNvbGUubG9nKGlzQXV0aGVudGljYXRlZCwgbmV4dFVybC5wYXRobmFtZSk7XG5cbiAgY29uc3QgaXNQdWJsaWNSb3V0ZSA9ICgoUFVCTElDX1JPVVRFUy5maW5kKHJvdXRlID0+IG5leHRVcmwucGF0aG5hbWUuc3RhcnRzV2l0aChyb3V0ZSkpXG4gIHx8IG5leHRVcmwucGF0aG5hbWUgPT09IFJPT1QpICYmICFQUk9URUNURURfU1VCX1JPVVRFUy5maW5kKHJvdXRlID0+IG5leHRVcmwucGF0aG5hbWUuaW5jbHVkZXMocm91dGUpKSk7XG5cbiAgY29uc29sZS5sb2coaXNQdWJsaWNSb3V0ZSk7XG5cbiAgaWYgKCFpc0F1dGhlbnRpY2F0ZWQgJiYgIWlzUHVibGljUm91dGUpXG4gICAgcmV0dXJuIFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoTE9HSU4sIG5leHRVcmwpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcbiAgbWF0Y2hlcjogW1wiLygoPyEuK1xcXFwuW1xcXFx3XSskfF9uZXh0KS4qKVwiLCBcIi9cIiwgXCIvKGFwaXx0cnBjKSguKilcIl1cbn07Il0sIm5hbWVzIjpbImF1dGhDb25maWciLCJOZXh0QXV0aCIsImF1dGgiLCJQVUJMSUNfUk9VVEVTIiwiTE9HSU4iLCJST09UIiwiUFJPVEVDVEVEX1NVQl9ST1VURVMiLCJtaWRkbGV3YXJlIiwicmVxdWVzdCIsIm5leHRVcmwiLCJzZXNzaW9uIiwiaXNBdXRoZW50aWNhdGVkIiwidXNlciIsImNvbnNvbGUiLCJsb2ciLCJwYXRobmFtZSIsImlzUHVibGljUm91dGUiLCJmaW5kIiwicm91dGUiLCJzdGFydHNXaXRoIiwiaW5jbHVkZXMiLCJSZXNwb25zZSIsInJlZGlyZWN0IiwiVVJMIiwiY29uZmlnIiwibWF0Y2hlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ })

});